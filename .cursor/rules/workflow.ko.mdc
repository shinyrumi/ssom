# 작업 워크플로우

1. **준비 단계**
   - 작업 시작 전에 `.cursor/rules`와 `docs/` 내 최신 스펙을 읽고 TODO 여부를 확인합니다.
   - 환경 파악 체크리스트를 기반으로 버전/제약을 메모하고, 기존 노트가 없으면 `docs/build-notes.md` 등에 기록합니다.

2. **계획 수립**
   - 최소 3단계 이상으로 작업 계획을 세우고, 각 단계가 완료될 때마다 상태를 갱신합니다.
   - 계획 변경 시 기존 항목을 지우지 말고, 취소/보류 이유를 함께 남깁니다.

3. **구현 규칙**
   - 비즈니스 로직은 `lib` 레이어부터 작성하고, UI는 DTO 계약이 확정된 이후에 진행합니다.
   - 낙관적 업데이트, 에러 롤백 등 복잡한 흐름에는 짧은 주석을 추가해 독자가 문맥을 이해하도록 합니다.
   - 문서/주석 외에는 한글을 남용하지 않고, 코드 식별자에는 일관된 영어 카멜/케밥 스타일을 유지합니다.

4. **검증 & 커밋**
   - 가능하면 `npm run test` 및 필요한 빌드/린트를 실행합니다.
   - 각 작업 단위가 끝나면 `git add -A`, `git commit -m "[설명]"`, `git push` 순으로 실행합니다.
   - 커밋 메시지는 한국어로 "무엇을" + "이유"까지 포함하며, 예: `피드 댓글 서비스 골격 추가 - 레벨 검증 분리`.

5. **결과 보고**
   - 완료 보고 시 변경 파일 경로와 핵심 변경 이유를 명시하고, 미해결 TODO/리스크를 링크나 Bullet로 제공합니다.
   - 후속 행동이 필요하면 번호 목록으로 제안하여 빠른 의사결정을 돕습니다.
