# 핵심 원칙

1. **최소 스펙 우선 구현**
   - 항상 기능의 수직 슬라이스(MVP)만을 우선 구현하고, 추가 기능은 별도 티켓으로 분리합니다.
   - 뷰와 도메인 레이어는 먼저 인터페이스/타입으로 약속하고, 이후 세부 구현을 확장합니다.
2. **Presentation/Business 분리**
   - UI 컴포넌트는 데이터를 `props`/DTO로만 받으며, 비즈니스 규칙은 `src/lib/**` 혹은 `use case` 레이어에서 처리합니다.
   - 서버 액션·API 라우트는 도메인 서비스에만 의존하며 DB/외부 서비스 호출을 직접 포함하지 않습니다.
3. **모듈성 & 파일 크기**
   - 하나의 소스 파일은 200줄 이하(React 컴포넌트는 150줄 이하)를 유지합니다. 초과 시 서브 컴포넌트/헬퍼로 분리합니다.
   - `hooks`, `services`, `repositories` 등 역할별 디렉터리를 유지하고, 교차 의존을 금지합니다.
4. **문서 및 커뮤니케이션**
   - 룰/스펙/노트 등 문서는 반드시 한국어로 작성합니다.
   - 변경 사항과 결정은 `docs/` 혹은 `.cursor/` 하위 문서로 남겨 추적 가능하게 유지합니다.
5. **자동 커밋 & 푸시**
   - 각 작업 단위(테스트 통과 또는 주요 기능 완성)마다 `git commit`과 `git push`를 수행하며, 커밋 메시지는 한국어로 상세히 작성합니다.
   - 커밋 전에 `lint`, `test` 등 가능한 검증을 실행하거나 실행 불가 사유를 노트에 남깁니다.
6. **성능/UX 배려**
   - 모바일 퍼스트, RSC 우선 전략을 따르며 클라이언트 상태는 최소화합니다.
   - 실시간 피드/댓글은 낙관적 업데이트와 에러 롤백을 고려한 설계를 기본으로 합니다.
